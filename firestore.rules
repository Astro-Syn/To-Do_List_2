rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own todos
    match /todos/{todoId} {
      allow read, write: if request.auth != null && 
        (resource == null || request.auth.uid == resource.data.userId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
      // USERS COLLECTION
    match /users/{userId} {
      // Anyone signed in can read user info (for friend suggestions)
      allow read: if request.auth != null;
      // Only the owner can write or edit their profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can create and update their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can create and update their own profile
    match /profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
        // PROFILES COLLECTION
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
     // FRIEND REQUESTS COLLECTION
    match /friendRequests/{requestId} {
      // Only sender or receiver can read or write their friend requests
      allow read, write: if request.auth != null &&
        (
          (request.resource.data.fromUserId == request.auth.uid) ||
          (request.resource.data.toUserId == request.auth.uid)
        );
    }
    
      // Friend Requests
    match /friendRequests/{requestId} {
      // Read or write only if the authenticated user
      // is either the sender or the recipient.
      allow read, update, delete: if request.auth != null &&
        (resource.data.fromUserId == request.auth.uid ||
         resource.data.toUserId == request.auth.uid);

      allow create: if request.auth != null &&
        (request.resource.data.fromUserId == request.auth.uid ||
         request.resource.data.toUserId == request.auth.uid);
    }

    // Basic user/profile access
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
  }
}